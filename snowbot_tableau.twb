<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.1210.2209                               -->
<workbook original-version='18.1' source-build='2019.2.7 (20192.19.1210.2209)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data copy (2)' inline='true' name='federated.0zhkbyo1mslrtt1ghsz8u1ynl7tl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data copy' name='semistructpassivestore-direct.0kvg3nx1kz3d570zsc5sa03u2x5k'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/dev/snowbot' filename='data copy.json' password='' server=''>
              <semistruct-schemas />
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0kvg3nx1kz3d570zsc5sa03u2x5k' name='data copy.json' table='[data copy.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data copy.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data copy.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data copy.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data copy.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data copy.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data copy.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data copy.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data copy.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data Copy' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.573758' measure-ordering='alphabetic' measure-percentage='0.426242' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='2020_01_02_14_32_wb_lifts' inline='true' name='federated.08opw1o1eo1nck11s6rpo1owp9ss' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020_01_02_14_32_wb_lifts' name='semistructpassivestore-direct.1dtv35r0u4esro1fk07v0187u0xa'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='2020_01_02_14_32_wb_lifts.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[2020_01_02_14_32_wb_lifts.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1dtv35r0u4esro1fk07v0187u0xa' name='2020_01_02_14_32_wb_lifts.json' table='[2020_01_02_14_32_wb_lifts.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[2020_01_02_14_32_wb_lifts.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[2020_01_02_14_32_wb_lifts.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per 2020_01_02_14_32_wb_lifts.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at 2020_01_02_14_32_wb_lifts.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='2020 01 02 14 32 Wb Lifts' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.558011' measure-ordering='alphabetic' measure-percentage='0.441989' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='merged_file' inline='true' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='merged_file' name='semistructpassivestore-direct.02oo5wi11mul0x1dlv3tb0vfen1p'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/dev/snowbot/data' filename='merged_file.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[merged_file.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.02oo5wi11mul0x1dlv3tb0vfen1p' name='merged_file.json' table='[merged_file.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[merged_file.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[merged_file.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[merged_file.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[merged_file.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[merged_file.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[merged_file.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[merged_file.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[merged_file.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Placeholder' datatype='integer' name='[Calculation_1068338277994426371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='min(0)' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
          <bin default-name='false' value='&quot;Alpine&quot;'>
            <value>&quot;7th Heaven Express&quot;</value>
            <value>&quot;Glacier Express&quot;</value>
            <value>&quot;Harmony 6 Express&quot;</value>
            <value>&quot;Horstman T-Bar&quot;</value>
            <value>&quot;Peak Express&quot;</value>
            <value>&quot;Showcase T-Bar&quot;</value>
            <value>&quot;Symphony Express&quot;</value>
            <value>&quot;T-Bars&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Sub-alpine&quot;'>
            <value>&quot;Big Red Express&quot;</value>
            <value>&quot;Blackcomb Gondola Lower&quot;</value>
            <value>&quot;Blackcomb Gondola Upper&quot;</value>
            <value>&quot;Catskinner Express&quot;</value>
            <value>&quot;Coca-Cola Tube Park&quot;</value>
            <value>&quot;Creekside Gondola&quot;</value>
            <value>&quot;Crystal Ridge Express&quot;</value>
            <value>&quot;Emerald 6 Express&quot;</value>
            <value>&quot;Excalibur Gondola Lower&quot;</value>
            <value>&quot;Excalibur Gondola Upper&quot;</value>
            <value>&quot;Excelerator Express&quot;</value>
            <value>&quot;Fitzsimmons Express&quot;</value>
            <value>&quot;Franz&apos;s Chair&quot;</value>
            <value>&quot;Garbanzo Express&quot;</value>
            <value>&quot;Jersey Cream Express&quot;</value>
            <value>&quot;Magic Chair&quot;</value>
            <value>&quot;Olympic Chair&quot;</value>
            <value>&quot;Peak 2 Peak Gondola&quot;</value>
            <value>&quot;Whistler Village Gondola Lower&quot;</value>
            <value>&quot;Whistler Village Gondola Upper&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
          <bin default-name='false' value='&quot;Blackcomb&quot;'>
            <value>&quot;7th Heaven Express&quot;</value>
            <value>&quot;Blackcomb Gondola Lower&quot;</value>
            <value>&quot;Blackcomb Gondola Upper&quot;</value>
            <value>&quot;Catskinner Express&quot;</value>
            <value>&quot;Coca-Cola Tube Park&quot;</value>
            <value>&quot;Crystal Ridge Express&quot;</value>
            <value>&quot;Excalibur Gondola Lower&quot;</value>
            <value>&quot;Excalibur Gondola Upper&quot;</value>
            <value>&quot;Excelerator Express&quot;</value>
            <value>&quot;Glacier Express&quot;</value>
            <value>&quot;Horstman T-Bar&quot;</value>
            <value>&quot;Jersey Cream Express&quot;</value>
            <value>&quot;Magic Chair&quot;</value>
            <value>&quot;Showcase T-Bar&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Whistler&quot;'>
            <value>&quot;Big Red Express&quot;</value>
            <value>&quot;Creekside Gondola&quot;</value>
            <value>&quot;Emerald 6 Express&quot;</value>
            <value>&quot;Fitzsimmons Express&quot;</value>
            <value>&quot;Franz&apos;s Chair&quot;</value>
            <value>&quot;Garbanzo Express&quot;</value>
            <value>&quot;Harmony 6 Express&quot;</value>
            <value>&quot;Olympic Chair&quot;</value>
            <value>&quot;Peak Express&quot;</value>
            <value>&quot;Symphony Express&quot;</value>
            <value>&quot;T-Bars&quot;</value>
            <value>&quot;Whistler Village Gondola Lower&quot;</value>
            <value>&quot;Whistler Village Gondola Upper&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per merged_file.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at merged_file.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Standby' />
          <alias key='&quot;O&quot;' value='Open' />
          <alias key='&quot;X&quot;' value='Closed' />
        </aliases>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[status]' derivation='Attribute' name='[attr:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <folder name='Merged File' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.660952' measure-ordering='alphabetic' measure-percentage='0.339048' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data copy' inline='true' name='federated.0jlna3j08tgpzl11pw1dy1ruxk4h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_2019_20' name='semistructpassivestore-direct.186jri006b94kh18mih311yzp959'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='/Users/paul/Downloads/data_2019_20.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data copy.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[data_2019_20.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.186jri006b94kh18mih311yzp959' name='data_2019_20.json' table='[data_2019_20.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data_2019_20.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data_2019_20.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data_2019_20.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data_2019_20.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data_2019_20.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data_2019_20.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data_2019_20.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data_2019_20.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data_2019_20.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data_2019_20.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Number of Records]' role='dimension' type='nominal' user:auto-column='numrec'>
        <calculation class='tableau' formula='STR(1)' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data 2019 20' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <folder name='Terrain' role='dimensions' />
      <folder name='Weather' role='dimensions' />
      <folder name='Weather Forecast' role='dimensions' />
      <folder name='Source Measures' role='measures' />
      <layout dim-ordering='alphabetic' dim-percentage='0.681905' measure-ordering='alphabetic' measure-percentage='0.318095' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_2019_20 (2)' inline='true' name='federated.0eybhs500l9ylc1gsy6ck1v4ikyq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_2019_20' name='semistructpassivestore-direct.0osfbb209jkg4v1giubl70heh35e'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='data_2019_20.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data_2019_20.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0osfbb209jkg4v1giubl70heh35e' name='data_2019_20.json' table='[data_2019_20.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data_2019_20.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data_2019_20.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data_2019_20.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data_2019_20.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data_2019_20.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data_2019_20.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data_2019_20.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data_2019_20.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data_2019_20.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data_2019_20.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data 2019 20' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.556914' measure-ordering='alphabetic' measure-percentage='0.443086' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Clipboard_20200109T220917' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20200109T220917' name='Clipboard_20200109T220917leaf'>
            <connection class='textscan' directory='/Users/paul/Documents/My Tableau Repository/Datasources/Clipboard_20200109T220917' />
          </named-connection>
        </named-connections>
        <relation connection='Clipboard_20200109T220917leaf' name='Clipboard_20200109T220917#txt' table='[Clipboard_20200109T220917#txt]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500952' measure-ordering='alphabetic' measure-percentage='0.499048' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='lifts_status_changes' inline='true' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='lifts_status_changes' name='textscan.018iy0n008r2et1gner7t1pzxyok'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/paul/dev/snowbot/data/lifts_status_changes.csv' dataRefreshTime='' directory='/Users/paul/dev/snowbot/data' filename='/var/folders/h8/_r_m3br529zglyh_yts3wf3c0000gp/T/tableau-temp/0mugkm218vq57o15s6h2r1ht0gz6/lifts_status_changes.csv.xlsx' interpretationMode='8' password='' port='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.018iy0n008r2et1gner7t1pzxyok' name='lifts_status_changes.csv' table='[/Users/paul/dev/snowbot/data/lifts_status_changes#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:G426:no:A1:G426:1' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='liftID' ordinal='1' />
            <column datatype='integer' name='resortID' ordinal='2' />
            <column datatype='string' name='liftName' ordinal='3' />
            <column datatype='string' name='status' ordinal='4' />
            <column datatype='integer' name='timeToRide' ordinal='5' />
            <column datatype='datetime' date-parse-format='yyyy-dd-MM HH:mm:ss.SSSSSSZZZZZ|#|#|EEE MMM  dd HH:mm:ss yyyy' name='timestamp' ordinal='6' />
            <column datatype='string' name='time_diff' ordinal='7' />
            <column datatype='real' name='time_diff_seconds' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G426:no:A1:G426:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liftID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>liftID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resortID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>resortID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liftName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>liftName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeToRide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>timeToRide</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_diff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_diff]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>time_diff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_diff_seconds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_diff_seconds]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>time_diff_seconds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='time_difference' datatype='datetime' datatype-customized='true' name='[Calculation_157625993330892800]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [timestamp], LOOKUP([timestamp],1)))/86400'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Avg' caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
        <calculation class='tableau' formula='[time_diff_seconds]/86400' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Lift ID' datatype='integer' name='[liftID]' role='dimension' type='ordinal' />
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
      <column caption='Resort ID' datatype='integer' name='[resortID]' role='dimension' type='ordinal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Time To Ride' datatype='integer' name='[timeToRide]' role='measure' type='quantitative' />
      <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:ok]' pivot='key' type='ordinal' visual-totals='None' />
      <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_157625993330892800]' derivation='User' name='[usr:Calculation_157625993330892800:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group hidden='true' name='[Exclusions (Lift Name,Status,time_diff_days,Timestamp)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:liftName:nk]' />
          <groupfilter function='level-members' level='[none:status:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_265430909502623767:vtnone:ok]' />
          <groupfilter function='level-members' level='[none:timestamp:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.540952' measure-ordering='alphabetic' measure-percentage='0.459048' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_157625993330892800:ok]' type='palette'>
            <map to='#8cd17d'>
              <bucket>%missing%</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-date-format>L</default-date-format>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='data copy' name='federated.0jlna3j08tgpzl11pw1dy1ruxk4h' />
            <datasource caption='data_2019_20 (2)' name='federated.0eybhs500l9ylc1gsy6ck1v4ikyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eybhs500l9ylc1gsy6ck1v4ikyq'>
            <column-instance column='[resortID]' derivation='None' name='[none:resortID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.resortID</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jlna3j08tgpzl11pw1dy1ruxk4h'>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:nk]' pivot='key' type='nominal' />
            <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]'>
            <groupfilter function='member' level='[none:resortID:ok]' member='13.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' />
              <text column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:liftName:nk]</rows>
        <cols>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:timestamp:nk]</cols>
      </table>
      <simple-id uuid='{8F8EEEED-A901-4EB9-B7ED-7B2903E48F21}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20200109T220917' />
          </datasources>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6574BD9B-A81B-4173-902F-A0203849E877}' />
    </worksheet>
    <worksheet name='gantt_1'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Alpine&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-alpine&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak 2 Peak Gondola&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Blackcomb&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Whistler&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[timestamp]' derivation='Day' name='[dy:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Hour' name='[hr:timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute' name='[mi:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Month' name='[mn:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Year' name='[yr:timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]' value='29' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]))</rows>
        <cols>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]))))</cols>
      </table>
      <simple-id uuid='{CF19F586-1043-4507-B393-15B04F09D8E8}' />
    </worksheet>
    <worksheet name='gantt_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='ATTR([Timestamp])-LOOKUP(ATTR([Timestamp]), -1)' datatype='real' name='[Calculation_26669759692615683]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='ATTR([timestamp])-LOOKUP(ATTR([timestamp]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='DATEDIFF(&apos;minute&apos;, LOOKUP(ATTR([Timestamp]), 0), LOOKUP(ATTR(...' datatype='integer' name='[Calculation_26669759696773131]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, LOOKUP(ATTR([timestamp]), 0), LOOKUP(ATTR([timestamp]), 0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Alpine&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-alpine&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak 2 Peak Gondola&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Blackcomb&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Whistler&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_26669759692615683]' derivation='User' name='[usr:Calculation_26669759692615683:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_26669759696773131]' derivation='User' name='[usr:Calculation_26669759696773131:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759692615683:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759696773131:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]))</rows>
        <cols>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk] + ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759692615683:qk] + [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759696773131:qk]))</cols>
      </table>
      <simple-id uuid='{660FC254-837E-4D64-990B-D506E7D38672}' />
    </worksheet>
    <worksheet name='new'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column-instance column='[timestamp]' derivation='Day' name='[dy:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Hour' name='[hr:timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute' name='[mi:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Month' name='[mn:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute-Trunc' name='[tmi:timestamp:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='27' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]' value='27' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[tmi:timestamp:qk]' value='27' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
              <text column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</rows>
        <cols>(([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]) * [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[tmi:timestamp:qk])</cols>
      </table>
      <simple-id uuid='{8AF9394B-D388-40C1-AAF3-CD0A3FC0B2C5}' />
    </worksheet>
    <worksheet name='timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='Placeholder' datatype='integer' name='[Calculation_1068338277994426371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='min(0)' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1068338277994426371]' derivation='User' name='[usr:Calculation_1068338277994426371:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_1068338277994426371:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
              <text column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='shape' value=':filled/square' />
                <format attr='size' value='6.3166670799255371' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='27' />
                <format attr='maxheight' value='27' />
                <format attr='minwidth' value='1275' />
                <format attr='maxwidth' value='1275' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk] * [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_1068338277994426371:qk])</rows>
        <cols>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]</cols>
      </table>
      <simple-id uuid='{72607584-BE1D-403D-87F4-C59FDBCA1B2A}' />
    </worksheet>
    <worksheet name='via_status _changes_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='lifts_status_changes' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' />
          </datasources>
          <datasource-dependencies datasource='federated.0cblcgu1ma86is13mk8l20yjsv8q'>
            <column aggregation='Avg' caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
              <calculation class='tableau' formula='[time_diff_seconds]/86400' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:ok]' pivot='key' type='ordinal' visual-totals='None' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[timestamp]' derivation='Day-Trunc' name='[tdy:timestamp:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[time_diff_seconds]' role='measure' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]' field-type='quantitative' major-origin='#2020-01-03 12:00:00#' major-spacing='5.0' major-units='minutes' max='#2020-01-09 22:49:44.900#' min='#2020-01-02 00:14:49#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:qk]' />
              <text column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]' />
              <color column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</rows>
        <cols>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]</cols>
      </table>
      <simple-id uuid='{26B279BE-9A99-46D2-BEFD-852392CDA8B6}' />
    </worksheet>
    <worksheet name='via_status_changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='lifts_status_changes' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' />
          </datasources>
          <datasource-dependencies datasource='federated.0cblcgu1ma86is13mk8l20yjsv8q'>
            <column aggregation='Avg' caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
              <calculation class='tableau' formula='[time_diff_seconds]/86400' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:ok]' pivot='key' type='ordinal' visual-totals='None' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[timestamp]' derivation='Day-Trunc' name='[tdy:timestamp:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[time_diff_seconds]' role='measure' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]'>
            <groupfilter from='0.0103866878125' function='range' level='[none:Calculation_265430909502623767:vtnone:ok]' to='2.8541483427777781' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]' field-type='quantitative' major-origin='#2020-01-06 11:47:13.115#' major-spacing='1' major-units='days' minor-origin='#2020-01-06 11:47:13.115#' minor-spacing='1' minor-units='hours' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]' value='*' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' />
              <size column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:qk]' />
              <lod column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</rows>
        <cols>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[attr:timestamp:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{D755F4BB-BA74-469B-89DD-0C92D6E9C2B0}' />
    </worksheet>
  </worksheets>
  <windows source-height='156'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]</field>
            <field>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:liftName:nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:resortID (lifts):ok]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:status (lifts):nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:timestamp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC71A15C-2472-495D-A4B5-6332B4494A2A}' />
    </window>
    <window class='worksheet' name='new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BE1E5AD-5C4D-49AA-9B75-02211099098F}' />
    </window>
    <window class='worksheet' name='gantt_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Alpine&quot;</value>
                <value>&quot;Blackcomb&quot;</value>
                <value>4</value>
                <value>14</value>
                <value>49</value>
                <value>1</value>
                <value>&quot;7th Heaven Express&quot;</value>
                <value>&quot;X&quot;</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Area]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftID:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[qr:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10BA01CD-F85F-472E-875C-123E143BA18D}' />
    </window>
    <window class='worksheet' name='gantt_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5102F243-A273-4572-83AE-ED7556A95883}' />
    </window>
    <window class='worksheet' name='timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[none:liftName:nk]</field>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[none:status:nk]</field>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[yr:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:Calculation_1068338277993893889:qk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18471A19-C3BC-4BB0-9682-D90FB603A4C9}' />
    </window>
    <window class='worksheet' name='via_status _changes_old'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[dy:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[mn:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:time_diff:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[qr:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[thr:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tmi:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99AB0283-DFAF-4F96-BA71-19401F9CD55A}' />
    </window>
    <window class='worksheet' maximized='true' name='via_status_changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftID:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[thr:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tmi:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok:2]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{028257BE-7615-46B0-8661-7F5D3895BE3D}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC60A9E9-E2C0-4DFC-B1C7-5EAFD0C0FF23}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      +2ltbaW2tha73f6FLtybm5upqam57Xv19fVcuXLlL37e4XBID816e3txuVx33YZ7hSiECHsd
      0p010e/pr8c7Qp4Fi0Fff5kk+vUtotcx7FaIIXeAf/iHf+AXv/gF69ev5+OPP77ryuyCIHDg
      wAHq6uro6uqiqqoKQRBuEWMNFVEU2bp1Kz/72c/YunUr69at+0Id6erVqxw8ePC271VXV3Pi
      xIm/+Pn//u//luqcHTp0iLKysrtuw71CDHgInN6I6LIhCiECZzYRdjQMW3s+S9jThv/kBkSf
      m7CjnsDZLSDc3e/oXjPkJyRms5mVK1dKasRjx44hiiITJ07k0KFDLFq0iEuXLlFRUYHVamXR
      okXs3LmTtrY2HnjgAUpLS6V1ffo+uyAIbN26FZfLxWOPPcb48ePZuXMny5cvp6amhlAohMFg
      oKWlBZvNRmFhIfn5+dTX13Pq1Cl++MMfYrFY6OnpQa/XY7PZ+P3vf09PTw+PP/44ubm5bNq0
      CZlMRktLC0uWLGHy5MlUVVVRXl5OW1sbSUlJeL1edu7cSXV1NVOmTOFb3/qW1F6Hw8HmzZtx
      Op3Mnj2bWbNm3dFIMZBw3bVrF16vF71ez1NPPcWVK1eorq7GbreTl5fH4sWL6ejoYNu2bfT0
      9PDEE08gCAINDQ309PSQkZExqKbxUJDrzKgmPUbg/DYU0WnIzcnI4zIZMWrEqBSE6HGEaisI
      u5tRpn3N1Ig7d+7kzTff5PDhw1itVj766CPWr1+PSqXC5XKxdetWiouLKSgoQKlUkpmZyZw5
      c9i3bx82m01al8vl4tKlS9LfGRkZFBYWUlZWhtPp5PTp04RCIW7cuEFDQwOtra2sX78el8tF
      TEwM0D88SUlJIS0tjW3btvHuu+/S2dnJ22+/TVRUFA8++CAbN26ku7ubkydPYjabpcqSdrud
      LVu2kJuby+TJk5HL5Rw9epQzZ86wePFiKisrOXv2rNQ+QRB44IEHmD9/Pu+//z7Nzc1/8X/l
      cDi4fPkys2bNor29naNHj1JXV0d3dzfFxcWUl5djs9nYtm0bcXFx5OXlsWXLFlpaWti+fTuN
      jY3S97w7ZChiMpDp4whe/Rhl1qKRp0ZMn0uosRIUGhRjpgz77fYh/3cG4g1Wq5XY2FiSk5MZ
      P348J0+eZO3atTQ1NWGxWHjooYfQ6XR0d3dz8eJF2tvbpdDa7VAoFBQVFREbG8vBgwfvWEo0
      OzubZ599dlAEIRAIIIoimZmZvP3228yaNYuuri5WrFhBQkICFRUVtLe3ExERwezZs3E4HNTW
      1uJ0OtHpdJSUlFBVVSXNDZg6dSolJSVcv36d69evD5pcc+zYMfr6+vB4PPT09EivDxjnBpxC
      AzvUYrEwbdo03G43169fx2AwkJWVRXFxMadOnaKxsRGbzUZPTw8qlYqOjg78fj8pKSn83d/9
      HQbDF5NFiWEBfC6QKRB9LmSG+C+0nq8MnxOZxoTY14UY8iFT3d0EpnvNkM8ASqWSpKQk0tPT
      iY+Pp6uri5s3b2IwGDh58iQGgwGn00lnZycOh4Pjx4/jdrt5/vnnb1ujd4AB+VRjY6OUpPT7
      /XR3d2O326XlkpOTByUks7KyuHHjBsePHycjIwOj0SglPuvq6rhx44aU8Bxg4MepVqvp7u6m
      vb0dl8tFOBzGbDbT2NhIR0cHTU1Ng47A+/btw2w288ILL9wycy0iIoLq6mra2to4e/asVIZ1
      IPJdV1eH2WxGJpMRCATo6uqis7OT6OhozGYzaWlpPP744zzzzDOoVCrGjBnzhX/8iCKhhsPI
      DHH9asTqrSNPjXj1Y5QTF6OITiNU9zVSI/p8Pt544w1JjajVasnJySEnJ4f333+f3NxcJkyY
      wGuvvUZKSgqzZs3ixo0b/OpXv8LpdKJUKtFqtSiVShQKhXR0NZlMrFu3Dq/Xy7Jly0hOTkap
      VPKf//mfKBQKZs+ejUqlumX6pcVi4Rvf+IZ00RkKhYiJiWHBggWUlZUhCALFxcXEx8ej1+ul
      Atc6nU4KxP3yl79EqVSSlZVFUVERJ0+e5J//+Z8xGAxMmzaNyspKNBoNmZmZrFu3DpvNhiAI
      g6xy8+fP54033uDcuXOoVCpmzpxJW1sbV65c4cUXX0Sj0fD973+fQ4cO8dFHH3H8+HGp9vH8
      +fMpKyvj3LlzpKSkMGXKlC+lWwz3dhBuPY966reRqQ0IttMIrTUok4tGjBpRptSgSMhFNFsJ
      nnsHxv0fUyMO6BAVCoXk9vys/vDTfHroMLDcgBpRr9d/7hhREAR8Pt+gZfv6+qSL5zt9PhwO
      4/F4MBgMUmhNEATcbrckzv10G/1+/x2/SzAYxO12S4U7qqur+eCDD3jxxRdRq9XI5XJ+//vf
      o1arWbp06aAzmSAIBAIByVE6yl8PmUwm+3/dVqAL/5htHwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gantt_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='gantt_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='new' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='timeline' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='via_status _changes_old' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='via_status_changes' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
