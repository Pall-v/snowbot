<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.1210.2209                               -->
<workbook original-version='18.1' source-build='2019.2.7 (20192.19.1210.2209)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data copy (2)' inline='true' name='federated.0zhkbyo1mslrtt1ghsz8u1ynl7tl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data copy' name='semistructpassivestore-direct.0kvg3nx1kz3d570zsc5sa03u2x5k'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/dev/snowbot' filename='data copy.json' password='' server=''>
              <semistruct-schemas />
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0kvg3nx1kz3d570zsc5sa03u2x5k' name='data copy.json' table='[data copy.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data copy.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data copy.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data copy.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data copy.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data copy.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data copy.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data copy.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data copy.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data copy.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data Copy' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.573758' measure-ordering='alphabetic' measure-percentage='0.426242' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='2020_01_02_14_32_wb_lifts' inline='true' name='federated.08opw1o1eo1nck11s6rpo1owp9ss' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020_01_02_14_32_wb_lifts' name='semistructpassivestore-direct.1dtv35r0u4esro1fk07v0187u0xa'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='2020_01_02_14_32_wb_lifts.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[2020_01_02_14_32_wb_lifts.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1dtv35r0u4esro1fk07v0187u0xa' name='2020_01_02_14_32_wb_lifts.json' table='[2020_01_02_14_32_wb_lifts.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[2020_01_02_14_32_wb_lifts.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[2020_01_02_14_32_wb_lifts.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[2020_01_02_14_32_wb_lifts.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[2020_01_02_14_32_wb_lifts.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per 2020_01_02_14_32_wb_lifts.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at 2020_01_02_14_32_wb_lifts.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='2020 01 02 14 32 Wb Lifts' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.558011' measure-ordering='alphabetic' measure-percentage='0.441989' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data copy' inline='true' name='federated.0jlna3j08tgpzl11pw1dy1ruxk4h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_2019_20' name='semistructpassivestore-direct.186jri006b94kh18mih311yzp959'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='/Users/paul/Downloads/data_2019_20.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data copy.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[data_2019_20.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.186jri006b94kh18mih311yzp959' name='data_2019_20.json' table='[data_2019_20.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data_2019_20.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data_2019_20.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data_2019_20.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data_2019_20.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data_2019_20.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data_2019_20.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data_2019_20.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data_2019_20.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data_2019_20.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data_2019_20.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Number of Records]' role='dimension' type='nominal' user:auto-column='numrec'>
        <calculation class='tableau' formula='STR(1)' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data 2019 20' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <folder name='Terrain' role='dimensions' />
      <folder name='Weather' role='dimensions' />
      <folder name='Weather Forecast' role='dimensions' />
      <folder name='Source Measures' role='measures' />
      <layout dim-ordering='alphabetic' dim-percentage='0.681905' measure-ordering='alphabetic' measure-percentage='0.318095' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_2019_20 (2)' inline='true' name='federated.0eybhs500l9ylc1gsy6ck1v4ikyq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_2019_20' name='semistructpassivestore-direct.0osfbb209jkg4v1giubl70heh35e'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/Downloads' filename='data_2019_20.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data_2019_20.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='terrain' value='false' />
                  <map key='terrain.Value' value='false' />
                  <map key='weather' value='false' />
                  <map key='weather.Value' value='false' />
                  <map key='weather.Value.weatherForecast' value='false' />
                  <map key='weather.Value.weatherForecast.Value' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0osfbb209jkg4v1giubl70heh35e' name='data_2019_20.json' table='[data_2019_20.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data_2019_20.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[data_2019_20.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[data_2019_20.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[data_2019_20.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[data_2019_20.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[data_2019_20.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[data_2019_20.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[data_2019_20.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data_2019_20.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data_2019_20.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data_2019_20.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data 2019 20' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.556914' measure-ordering='alphabetic' measure-percentage='0.443086' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='merged_file' inline='true' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='merged_file' name='semistructpassivestore-direct.02oo5wi11mul0x1dlv3tb0vfen1p'>
            <connection class='semistructpassivestore-direct' directory='/Users/paul/dev/snowbot/data' filename='merged_file.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[merged_file.json]'>
                  <map key='lifts' value='true' />
                  <map key='lifts.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.02oo5wi11mul0x1dlv3tb0vfen1p' name='merged_file.json' table='[merged_file.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[merged_file.json].[Document Index (generated)]' />
          <map key='[liftID]' value='[merged_file.json].[lifts.Value.liftID]' />
          <map key='[liftName]' value='[merged_file.json].[lifts.Value.liftName]' />
          <map key='[lifts Index (generated)]' value='[merged_file.json].[lifts.Index (generated)]' />
          <map key='[resortID]' value='[merged_file.json].[lifts.Value.resortID]' />
          <map key='[status]' value='[merged_file.json].[lifts.Value.status]' />
          <map key='[timeToRide]' value='[merged_file.json].[lifts.Value.timeToRide]' />
          <map key='[timestamp]' value='[merged_file.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lifts Index (generated)]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.liftID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.liftName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.liftName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.resortID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.resortID</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifts.Value.timeToRide</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>lifts.Value.timeToRide</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[merged_file.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Placeholder' datatype='integer' name='[Calculation_1068338277994426371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='min(0)' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
          <bin default-name='false' value='&quot;Alpine&quot;'>
            <value>&quot;7th Heaven Express&quot;</value>
            <value>&quot;Glacier Express&quot;</value>
            <value>&quot;Harmony 6 Express&quot;</value>
            <value>&quot;Horstman T-Bar&quot;</value>
            <value>&quot;Peak Express&quot;</value>
            <value>&quot;Showcase T-Bar&quot;</value>
            <value>&quot;Symphony Express&quot;</value>
            <value>&quot;T-Bars&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Sub-alpine&quot;'>
            <value>&quot;Big Red Express&quot;</value>
            <value>&quot;Blackcomb Gondola Lower&quot;</value>
            <value>&quot;Blackcomb Gondola Upper&quot;</value>
            <value>&quot;Catskinner Express&quot;</value>
            <value>&quot;Coca-Cola Tube Park&quot;</value>
            <value>&quot;Creekside Gondola&quot;</value>
            <value>&quot;Crystal Ridge Express&quot;</value>
            <value>&quot;Emerald 6 Express&quot;</value>
            <value>&quot;Excalibur Gondola Lower&quot;</value>
            <value>&quot;Excalibur Gondola Upper&quot;</value>
            <value>&quot;Excelerator Express&quot;</value>
            <value>&quot;Fitzsimmons Express&quot;</value>
            <value>&quot;Franz&apos;s Chair&quot;</value>
            <value>&quot;Garbanzo Express&quot;</value>
            <value>&quot;Jersey Cream Express&quot;</value>
            <value>&quot;Magic Chair&quot;</value>
            <value>&quot;Olympic Chair&quot;</value>
            <value>&quot;Peak 2 Peak Gondola&quot;</value>
            <value>&quot;Whistler Village Gondola Lower&quot;</value>
            <value>&quot;Whistler Village Gondola Upper&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
          <bin default-name='false' value='&quot;Blackcomb&quot;'>
            <value>&quot;7th Heaven Express&quot;</value>
            <value>&quot;Blackcomb Gondola Lower&quot;</value>
            <value>&quot;Blackcomb Gondola Upper&quot;</value>
            <value>&quot;Catskinner Express&quot;</value>
            <value>&quot;Coca-Cola Tube Park&quot;</value>
            <value>&quot;Crystal Ridge Express&quot;</value>
            <value>&quot;Excalibur Gondola Lower&quot;</value>
            <value>&quot;Excalibur Gondola Upper&quot;</value>
            <value>&quot;Excelerator Express&quot;</value>
            <value>&quot;Glacier Express&quot;</value>
            <value>&quot;Horstman T-Bar&quot;</value>
            <value>&quot;Jersey Cream Express&quot;</value>
            <value>&quot;Magic Chair&quot;</value>
            <value>&quot;Showcase T-Bar&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Whistler&quot;'>
            <value>&quot;Big Red Express&quot;</value>
            <value>&quot;Creekside Gondola&quot;</value>
            <value>&quot;Emerald 6 Express&quot;</value>
            <value>&quot;Fitzsimmons Express&quot;</value>
            <value>&quot;Franz&apos;s Chair&quot;</value>
            <value>&quot;Garbanzo Express&quot;</value>
            <value>&quot;Harmony 6 Express&quot;</value>
            <value>&quot;Olympic Chair&quot;</value>
            <value>&quot;Peak Express&quot;</value>
            <value>&quot;Symphony Express&quot;</value>
            <value>&quot;T-Bars&quot;</value>
            <value>&quot;Whistler Village Gondola Lower&quot;</value>
            <value>&quot;Whistler Village Gondola Upper&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per lifts]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([lifts Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at lifts level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per merged_file.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at merged_file.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Lift ID' datatype='real' name='[liftID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.liftName</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[lifts Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.resortID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='Standby' />
          <alias key='&quot;O&quot;' value='Open' />
          <alias key='&quot;X&quot;' value='Closed' />
        </aliases>
        <desc>
          <formatted-text>
            <run>lifts.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time To Ride' datatype='string' name='[timeToRide]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>lifts.Value.timeToRide</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[status]' derivation='Attribute' name='[attr:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <folder name='Lifts' role='dimensions'>
        <folder-item name='[liftID]' type='field' />
        <folder-item name='[liftName]' type='field' />
        <folder-item name='[lifts Index (generated)]' type='field' />
        <folder-item name='[resortID]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[timeToRide]' type='field' />
      </folder>
      <folder name='Merged File' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.654412' measure-ordering='alphabetic' measure-percentage='0.345588' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='lifts_status_changes' inline='true' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='lifts_status_changes' name='textscan.018iy0n008r2et1gner7t1pzxyok'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/paul/dev/snowbot/data/lifts_status_changes.csv' dataRefreshTime='' directory='/Users/paul/dev/snowbot/data' filename='/var/folders/h8/_r_m3br529zglyh_yts3wf3c0000gp/T/tableau-temp/0mugkm218vq57o15s6h2r1ht0gz6/lifts_status_changes.csv.xlsx' interpretationMode='8' password='' port='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.018iy0n008r2et1gner7t1pzxyok' name='lifts_status_changes.csv' table='[/Users/paul/dev/snowbot/data/lifts_status_changes#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:G426:no:A1:G426:1' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='liftID' ordinal='1' />
            <column datatype='integer' name='resortID' ordinal='2' />
            <column datatype='string' name='liftName' ordinal='3' />
            <column datatype='string' name='status' ordinal='4' />
            <column datatype='integer' name='timeToRide' ordinal='5' />
            <column datatype='datetime' date-parse-format='yyyy-dd-MM HH:mm:ss.SSSSSSZZZZZ|#|#|EEE MMM  dd HH:mm:ss yyyy' name='timestamp' ordinal='6' />
            <column datatype='string' name='time_diff' ordinal='7' />
            <column datatype='real' name='time_diff_seconds' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G426:no:A1:G426:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liftID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[liftID]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>liftID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resortID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[resortID]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>resortID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liftName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[liftName]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>liftName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeToRide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timeToRide]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>timeToRide</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_diff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_diff]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>time_diff</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_diff_seconds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_diff_seconds]</local-name>
            <parent-name>[lifts_status_changes.csv]</parent-name>
            <remote-alias>time_diff_seconds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='time_difference' datatype='datetime' datatype-customized='true' name='[Calculation_157625993330892800]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [timestamp], LOOKUP([timestamp],1)))/86400'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
        <calculation class='tableau' formula='[time_diff_seconds]/86400' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Lift ID' datatype='integer' name='[liftID]' role='dimension' type='ordinal' />
      <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
      <column caption='Resort ID' datatype='integer' name='[resortID]' role='dimension' type='ordinal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Time To Ride' datatype='integer' name='[timeToRide]' role='measure' type='quantitative' />
      <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:ok]' pivot='key' type='ordinal' visual-totals='None' />
      <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_157625993330892800]' derivation='User' name='[usr:Calculation_157625993330892800:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group hidden='true' name='[Exclusions (Lift Name,Status,time_diff_days,Timestamp)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:liftName:nk]' />
          <groupfilter function='level-members' level='[none:status:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_265430909502623767:vtnone:ok]' />
          <groupfilter function='level-members' level='[none:timestamp:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.538603' measure-ordering='alphabetic' measure-percentage='0.461397' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_157625993330892800:ok]' type='palette'>
            <map to='#8cd17d'>
              <bucket>%missing%</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;X&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-date-format>L</default-date-format>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='data copy' name='federated.0jlna3j08tgpzl11pw1dy1ruxk4h' />
            <datasource caption='data_2019_20 (2)' name='federated.0eybhs500l9ylc1gsy6ck1v4ikyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0eybhs500l9ylc1gsy6ck1v4ikyq'>
            <column-instance column='[resortID]' derivation='None' name='[none:resortID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Resort ID' datatype='real' name='[resortID]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.resortID</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jlna3j08tgpzl11pw1dy1ruxk4h'>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:nk]' pivot='key' type='nominal' />
            <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]'>
            <groupfilter function='member' level='[none:resortID:ok]' member='13.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' />
              <text column='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:liftName:nk]</rows>
        <cols>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:timestamp:nk]</cols>
      </table>
      <simple-id uuid='{8F8EEEED-A901-4EB9-B7ED-7B2903E48F21}' />
    </worksheet>
    <worksheet name='gantt_1'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Alpine&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-alpine&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak 2 Peak Gondola&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Blackcomb&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Whistler&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[timestamp]' derivation='Day' name='[dy:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Hour' name='[hr:timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute' name='[mi:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Month' name='[mn:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Year' name='[yr:timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]' value='29' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]))</rows>
        <cols>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]))))</cols>
      </table>
      <simple-id uuid='{CF19F586-1043-4507-B393-15B04F09D8E8}' />
    </worksheet>
    <worksheet name='gantt_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='ATTR([Timestamp])-LOOKUP(ATTR([Timestamp]), -1)' datatype='real' name='[Calculation_26669759692615683]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='ATTR([timestamp])-LOOKUP(ATTR([timestamp]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='DATEDIFF(&apos;minute&apos;, LOOKUP(ATTR([Timestamp]), 0), LOOKUP(ATTR(...' datatype='integer' name='[Calculation_26669759696773131]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, LOOKUP(ATTR([timestamp]), 0), LOOKUP(ATTR([timestamp]), 0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Lift Area' datatype='string' name='[Lift Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Alpine&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-alpine&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak 2 Peak Gondola&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Mountain]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[liftName]' new-bin='true'>
                <bin default-name='false' value='&quot;Blackcomb&quot;'>
                  <value>&quot;7th Heaven Express&quot;</value>
                  <value>&quot;Blackcomb Gondola Lower&quot;</value>
                  <value>&quot;Blackcomb Gondola Upper&quot;</value>
                  <value>&quot;Catskinner Express&quot;</value>
                  <value>&quot;Coca-Cola Tube Park&quot;</value>
                  <value>&quot;Crystal Ridge Express&quot;</value>
                  <value>&quot;Excalibur Gondola Lower&quot;</value>
                  <value>&quot;Excalibur Gondola Upper&quot;</value>
                  <value>&quot;Excelerator Express&quot;</value>
                  <value>&quot;Glacier Express&quot;</value>
                  <value>&quot;Horstman T-Bar&quot;</value>
                  <value>&quot;Jersey Cream Express&quot;</value>
                  <value>&quot;Magic Chair&quot;</value>
                  <value>&quot;Showcase T-Bar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Whistler&quot;'>
                  <value>&quot;Big Red Express&quot;</value>
                  <value>&quot;Creekside Gondola&quot;</value>
                  <value>&quot;Emerald 6 Express&quot;</value>
                  <value>&quot;Fitzsimmons Express&quot;</value>
                  <value>&quot;Franz&apos;s Chair&quot;</value>
                  <value>&quot;Garbanzo Express&quot;</value>
                  <value>&quot;Harmony 6 Express&quot;</value>
                  <value>&quot;Olympic Chair&quot;</value>
                  <value>&quot;Peak Express&quot;</value>
                  <value>&quot;Symphony Express&quot;</value>
                  <value>&quot;T-Bars&quot;</value>
                  <value>&quot;Whistler Village Gondola Lower&quot;</value>
                  <value>&quot;Whistler Village Gondola Upper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_26669759692615683]' derivation='User' name='[usr:Calculation_26669759692615683:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_26669759696773131]' derivation='User' name='[usr:Calculation_26669759696773131:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759692615683:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759696773131:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)] / ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]))</rows>
        <cols>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk] + ([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759692615683:qk] + [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_26669759696773131:qk]))</cols>
      </table>
      <simple-id uuid='{660FC254-837E-4D64-990B-D506E7D38672}' />
    </worksheet>
    <worksheet name='new'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column-instance column='[timestamp]' derivation='Day' name='[dy:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Hour' name='[hr:timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute' name='[mi:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Month' name='[mn:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute-Trunc' name='[tmi:timestamp:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]' value='27' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]' value='27' />
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[tmi:timestamp:qk]' value='27' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
              <text column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</rows>
        <cols>(([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok] / [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]) * [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[tmi:timestamp:qk])</cols>
      </table>
      <simple-id uuid='{8AF9394B-D388-40C1-AAF3-CD0A3FC0B2C5}' />
    </worksheet>
    <worksheet name='timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged_file' name='federated.1wvy67g1wt3g6h1ew11of0gyjrne' />
          </datasources>
          <datasource-dependencies datasource='federated.1wvy67g1wt3g6h1ew11of0gyjrne'>
            <column caption='Placeholder' datatype='integer' name='[Calculation_1068338277994426371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='min(0)' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>lifts.Value.liftName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='Standby' />
                <alias key='&quot;O&quot;' value='Open' />
                <alias key='&quot;X&quot;' value='Closed' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>lifts.Value.status</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1068338277994426371]' derivation='User' name='[usr:Calculation_1068338277994426371:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_1068338277994426371:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
              <text column='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='shape' value=':filled/square' />
                <format attr='size' value='6.3166670799255371' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='27' />
                <format attr='maxheight' value='27' />
                <format attr='minwidth' value='1275' />
                <format attr='maxwidth' value='1275' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk] * [federated.1wvy67g1wt3g6h1ew11of0gyjrne].[usr:Calculation_1068338277994426371:qk])</rows>
        <cols>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]</cols>
      </table>
      <simple-id uuid='{72607584-BE1D-403D-87F4-C59FDBCA1B2A}' />
    </worksheet>
    <worksheet name='via_status _changes_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='lifts_status_changes' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' />
          </datasources>
          <datasource-dependencies datasource='federated.0cblcgu1ma86is13mk8l20yjsv8q'>
            <column caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
              <calculation class='tableau' formula='[time_diff_seconds]/86400' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:ok]' pivot='key' type='ordinal' visual-totals='None' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[timestamp]' derivation='Day-Trunc' name='[tdy:timestamp:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[time_diff_seconds]' role='measure' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]' field-type='quantitative' major-origin='#2020-01-03 12:00:00#' major-spacing='5.0' major-units='minutes' max='#2020-01-09 22:49:44.900#' min='#2020-01-02 00:14:49#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:qk]' />
              <text column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]' />
              <color column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</rows>
        <cols>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]</cols>
      </table>
      <simple-id uuid='{26B279BE-9A99-46D2-BEFD-852392CDA8B6}' />
    </worksheet>
    <worksheet name='via_status_changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='lifts_status_changes' name='federated.0cblcgu1ma86is13mk8l20yjsv8q' />
          </datasources>
          <datasource-dependencies datasource='federated.0cblcgu1ma86is13mk8l20yjsv8q'>
            <column caption='time_diff_days' datatype='real' name='[Calculation_265430909502623767]' role='dimension' type='ordinal' visual-totals='None'>
              <calculation class='tableau' formula='[time_diff_seconds]/86400' />
            </column>
            <column caption='Lift Name' datatype='string' name='[liftName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_265430909502623767]' derivation='None' name='[none:Calculation_265430909502623767:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column-instance column='[liftName]' derivation='None' name='[none:liftName:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[timestamp]' derivation='Day-Trunc' name='[tdy:timestamp:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[time_diff_seconds]' role='measure' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' name='[timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]' field-type='quantitative' major-origin='#2020-01-06 11:47:13.115#' major-spacing='1.0' major-units='days' minor-origin='#2020-01-06 11:47:13.115#' minor-spacing='1.0' minor-units='hours' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]' value='*' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' />
              <size column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:qk]' />
              <lod column='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</rows>
        <cols>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[attr:timestamp:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{D755F4BB-BA74-469B-89DD-0C92D6E9C2B0}' />
    </worksheet>
  </worksheets>
  <windows source-height='135'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:resortID:ok]</field>
            <field>[federated.0eybhs500l9ylc1gsy6ck1v4ikyq].[none:status:nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:liftName:nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:resortID (lifts):ok]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:status (lifts):nk]</field>
            <field>[federated.0jlna3j08tgpzl11pw1dy1ruxk4h].[none:timestamp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC71A15C-2472-495D-A4B5-6332B4494A2A}' />
    </window>
    <window class='worksheet' name='new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BE1E5AD-5C4D-49AA-9B75-02211099098F}' />
    </window>
    <window class='worksheet' name='gantt_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
                    <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[dy:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[hr:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mi:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
                  <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Alpine&quot;</value>
                <value>&quot;Blackcomb&quot;</value>
                <value>4</value>
                <value>14</value>
                <value>49</value>
                <value>1</value>
                <value>&quot;7th Heaven Express&quot;</value>
                <value>&quot;X&quot;</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Area]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[mn:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftID:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[qr:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10BA01CD-F85F-472E-875C-123E143BA18D}' />
    </window>
    <window class='worksheet' name='gantt_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Lift Name (group)]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[Mountain]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:timestamp:qk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5102F243-A273-4572-83AE-ED7556A95883}' />
    </window>
    <window class='worksheet' name='timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[none:liftName:nk]</field>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[none:status:nk]</field>
            <field>[federated.08opw1o1eo1nck11s6rpo1owp9ss].[yr:timestamp:ok]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:Calculation_1068338277993893889:qk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:liftName:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[none:status:nk]</field>
            <field>[federated.1wvy67g1wt3g6h1ew11of0gyjrne].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18471A19-C3BC-4BB0-9682-D90FB603A4C9}' />
    </window>
    <window class='worksheet' name='via_status _changes_old'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[dy:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[mn:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:time_diff:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[qr:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tdy:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[thr:timestamp:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tmi:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99AB0283-DFAF-4F96-BA71-19401F9CD55A}' />
    </window>
    <window class='worksheet' maximized='true' name='via_status_changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:Calculation_265430909502623767:vtnone:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftID:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:liftName:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:status:nk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[none:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[thr:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[tmi:timestamp:qk]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok:2]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[usr:Calculation_157625993330892800:ok]</field>
            <field>[federated.0cblcgu1ma86is13mk8l20yjsv8q].[yr:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{028257BE-7615-46B0-8661-7F5D3895BE3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      +2ltbaW2tha73f6FLtybm5upqam57Xv19fVcuXLlL37e4XBID816e3txuVx33YZ7hSiECHsd
      0p010e/pr8c7Qp4Fi0Fff5kk+vUtotcx7FaIIXeAf/iHf+AXv/gF69ev5+OPP77ryuyCIHDg
      wAHq6uro6uqiqqoKQRBuEWMNFVEU2bp1Kz/72c/YunUr69at+0Id6erVqxw8ePC271VXV3Pi
      xIm/+Pn//u//luqcHTp0iLKysrtuw71CDHgInN6I6LIhCiECZzYRdjQMW3s+S9jThv/kBkSf
      m7CjnsDZLSDc3e/oXjPkJyRms5mVK1dKasRjx44hiiITJ07k0KFDLFq0iEuXLlFRUYHVamXR
      okXs3LmTtrY2HnjgAUpLS6V1ffo+uyAIbN26FZfLxWOPPcb48ePZuXMny5cvp6amhlAohMFg
      oKWlBZvNRmFhIfn5+dTX13Pq1Cl++MMfYrFY6OnpQa/XY7PZ+P3vf09PTw+PP/44ubm5bNq0
      CZlMRktLC0uWLGHy5MlUVVVRXl5OW1sbSUlJeL1edu7cSXV1NVOmTOFb3/qW1F6Hw8HmzZtx
      Op3Mnj2bWbNm3dFIMZBw3bVrF16vF71ez1NPPcWVK1eorq7GbreTl5fH4sWL6ejoYNu2bfT0
      9PDEE08gCAINDQ309PSQkZExqKbxUJDrzKgmPUbg/DYU0WnIzcnI4zIZMWrEqBSE6HGEaisI
      u5tRpn3N1Ig7d+7kzTff5PDhw1itVj766CPWr1+PSqXC5XKxdetWiouLKSgoQKlUkpmZyZw5
      c9i3bx82m01al8vl4tKlS9LfGRkZFBYWUlZWhtPp5PTp04RCIW7cuEFDQwOtra2sX78el8tF
      TEwM0D88SUlJIS0tjW3btvHuu+/S2dnJ22+/TVRUFA8++CAbN26ku7ubkydPYjabpcqSdrud
      LVu2kJuby+TJk5HL5Rw9epQzZ86wePFiKisrOXv2rNQ+QRB44IEHmD9/Pu+//z7Nzc1/8X/l
      cDi4fPkys2bNor29naNHj1JXV0d3dzfFxcWUl5djs9nYtm0bcXFx5OXlsWXLFlpaWti+fTuN
      jY3S97w7ZChiMpDp4whe/Rhl1qKRp0ZMn0uosRIUGhRjpgz77fYh/3cG4g1Wq5XY2FiSk5MZ
      P348J0+eZO3atTQ1NWGxWHjooYfQ6XR0d3dz8eJF2tvbpdDa7VAoFBQVFREbG8vBgwfvWEo0
      OzubZ599dlAEIRAIIIoimZmZvP3228yaNYuuri5WrFhBQkICFRUVtLe3ExERwezZs3E4HNTW
      1uJ0OtHpdJSUlFBVVSXNDZg6dSolJSVcv36d69evD5pcc+zYMfr6+vB4PPT09EivDxjnBpxC
      AzvUYrEwbdo03G43169fx2AwkJWVRXFxMadOnaKxsRGbzUZPTw8qlYqOjg78fj8pKSn83d/9
      HQbDF5NFiWEBfC6QKRB9LmSG+C+0nq8MnxOZxoTY14UY8iFT3d0EpnvNkM8ASqWSpKQk0tPT
      iY+Pp6uri5s3b2IwGDh58iQGgwGn00lnZycOh4Pjx4/jdrt5/vnnb1ujd4AB+VRjY6OUpPT7
      /XR3d2O326XlkpOTByUks7KyuHHjBsePHycjIwOj0SglPuvq6rhx44aU8Bxg4MepVqvp7u6m
      vb0dl8tFOBzGbDbT2NhIR0cHTU1Ng47A+/btw2w288ILL9wycy0iIoLq6mra2to4e/asVIZ1
      IPJdV1eH2WxGJpMRCATo6uqis7OT6OhozGYzaWlpPP744zzzzDOoVCrGjBnzhX/8iCKhhsPI
      DHH9asTqrSNPjXj1Y5QTF6OITiNU9zVSI/p8Pt544w1JjajVasnJySEnJ4f333+f3NxcJkyY
      wGuvvUZKSgqzZs3ixo0b/OpXv8LpdKJUKtFqtSiVShQKhXR0NZlMrFu3Dq/Xy7Jly0hOTkap
      VPKf//mfKBQKZs+ejUqlumX6pcVi4Rvf+IZ00RkKhYiJiWHBggWUlZUhCALFxcXEx8ej1+ul
      Atc6nU4KxP3yl79EqVSSlZVFUVERJ0+e5J//+Z8xGAxMmzaNyspKNBoNmZmZrFu3DpvNhiAI
      g6xy8+fP54033uDcuXOoVCpmzpxJW1sbV65c4cUXX0Sj0fD973+fQ4cO8dFHH3H8+HGp9vH8
      +fMpKyvj3LlzpKSkMGXKlC+lWwz3dhBuPY966reRqQ0IttMIrTUok4tGjBpRptSgSMhFNFsJ
      nnsHxv0fUyMO6BAVCoXk9vys/vDTfHroMLDcgBpRr9d/7hhREAR8Pt+gZfv6+qSL5zt9PhwO
      4/F4MBgMUmhNEATcbrckzv10G/1+/x2/SzAYxO12S4U7qqur+eCDD3jxxRdRq9XI5XJ+//vf
      o1arWbp06aAzmSAIBAIByVE6yl8PmUwm+3/dVqAL/5htHwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gantt_1' width='192'>
      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
      +1Xa/wO9VNZXpj4+mAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gantt_2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='new' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='timeline' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='via_status _changes_old' width='192'>
      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
      8hIn3+8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='via_status_changes' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
